//@version=5
// Esta es una modificación del indicador CM_Williams_Vix_Fix.
// Original script https://www.tradingview.com/script/og7JPrRA-CM-Williams-Vix-Fix-Finds-Market-Bottoms/
indicator("CM_Williams_Vix_Fix - Market Top and Bottom", overlay=false, timeframe="", timeframe_gaps=true)
periodoRetroceso = input(22, title="Período de retrosesos para máximos")//pd_LookBack Period Standard Deviation High
largoDeBandaBollinger = input(20, title="Longitud de la Banda de Bollinger")//bbl_
multiplicadorDeDesviasionEstandar = input.float(2.0, minval=1, maxval=5, title="Multiplicador de Desviación Estándar")//mult_Bollinger Band Standard Devaition Up
periodoRetrocesoPercentil  = input(50, title="Período de Retroceso para el Percentil Alto")//lb_Look Back Period Percentile High
nivelPercentil = input(.85, title="Percentile - 0.90=90%, 0.95=95%, 0.99=99%")//ph_

// Code to find bottom
//
//Calcula el precio más alto del cierre  en los últimos periodoRetroceso.
wvf = ((ta.highest(close, periodoRetroceso)-low)/(ta.highest(close, periodoRetroceso)))*100

desviacionEstandarWvf = multiplicadorDeDesviasionEstandar * ta.stdev(wvf, largoDeBandaBollinger)//sDev_
lineaMedia = ta.sma(wvf, largoDeBandaBollinger)
bandaInferior = lineaMedia - desviacionEstandarWvf
bandaSuperior = lineaMedia + desviacionEstandarWvf

rangoAlto = (ta.highest(wvf, periodoRetrocesoPercentil )) * nivelPercentil


// Code to find top
//
//Calcula el precio más bajo del cierre  en los últimos periodoRetroceso.
wvf1 = ((ta.lowest(close, periodoRetroceso)-high)/(ta.lowest(close, periodoRetroceso)))*100

desviacionEstandarWvf1 = multiplicadorDeDesviasionEstandar * ta.stdev(wvf1, largoDeBandaBollinger)//sDev1_
lineaMedia1 = ta.sma(wvf1, largoDeBandaBollinger)
bandaInferior1 = lineaMedia1 - desviacionEstandarWvf1
bandaSuperior1 = lineaMedia1 + desviacionEstandarWvf1

rangoBajo = (ta.lowest(wvf1, periodoRetrocesoPercentil )) * nivelPercentil

// Asignar colores a los rangos
colorMarketTop = wvf1 <= bandaInferior1 or wvf1 <= rangoBajo ? color.red: color.new(color.gray, 75)
colorMarketBottom = wvf >= bandaSuperior or wvf >= rangoAlto ? color.lime : color.new(color.gray, 75)


// Alerts added
topAlert = (colorMarketTop[0] == color.red) and (colorMarketTop[1] == color.new(color.gray, 75))
bottomAlert = (colorMarketBottom[0] == color.lime) and (colorMarketBottom[1] == color.new(color.gray, 75))

alertcondition(topAlert, "Top", "Top reached")
alertcondition(bottomAlert, "Bottom", "Bottom reached")


//Graficar barras
hline(50, "Zero Line", color=color.new(#787B86, 50))
plot((-100 * wvf1)+100, title="Market Top", style=plot.style_columns, linewidth = 4, color=colorMarketTop)
plot((-100 * wvf)+100, title="Market Bottom", style=plot.style_columns, linewidth = 4, color=colorMarketBottom)
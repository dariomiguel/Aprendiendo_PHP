//@version=6
// Esta es una modificación del indicador CM_Williams_Vix_Fix.
// Original script https://www.tradingview.com/script/og7JPrRA-CM-Williams-Vix-Fix-Finds-Market-Bottoms/
indicator('Vix_Fix -- Top and Bottom + Stochastic', overlay = false, timeframe = '', timeframe_gaps = true)
periodoRetroceso = input(22, title = 'Período de retrocesos para máximos') //pd_LookBack Period Standard Deviation High
largoDeBandaBollinger = input(20, title = 'Longitud de la Banda de Bollinger') //bbl_
multiplicadorDeDesviasionEstandar = input.float(2.0, minval = 1, maxval = 5, title = 'Multiplicador de Desviación Estándar') //mult_Bollinger Band Standard Devaition Up
periodoRetrocesoPercentil = input(50, title = 'Período de Retroceso para el Percentil Alto') //lb_Look Back Period Percentile High
nivelPercentil = input(.85, title = 'Percentile - 0.90=90%, 0.95=95%, 0.99=99%') //ph_

// Code to find bottom
//
//Calcula el precio más alto del cierre  en los últimos periodoRetroceso.
wvf = (ta.highest(close, periodoRetroceso) - low) / ta.highest(close, periodoRetroceso) * 100

desviacionEstandarWvf = multiplicadorDeDesviasionEstandar * ta.stdev(wvf, largoDeBandaBollinger) //sDev_
lineaMedia = ta.sma(wvf, largoDeBandaBollinger)
bandaInferior = lineaMedia - desviacionEstandarWvf
bandaSuperior = lineaMedia + desviacionEstandarWvf

rangoAlto = ta.highest(wvf, periodoRetrocesoPercentil) * nivelPercentil


// Code to find top
//
//Calcula el precio más bajo del cierre  en los últimos periodoRetroceso.
wvf1 = (ta.lowest(close, periodoRetroceso) - high) / ta.lowest(close, periodoRetroceso) * 100

desviacionEstandarWvf1 = multiplicadorDeDesviasionEstandar * ta.stdev(wvf1, largoDeBandaBollinger) //sDev1_
lineaMedia1 = ta.sma(wvf1, largoDeBandaBollinger)
bandaInferior1 = lineaMedia1 - desviacionEstandarWvf1
bandaSuperior1 = lineaMedia1 + desviacionEstandarWvf1

rangoBajo = ta.lowest(wvf1, periodoRetrocesoPercentil) * nivelPercentil

// Asignar colores a los rangos
colorMarketTop = wvf1 <= bandaInferior1 or wvf1 <= rangoBajo ? color.red :color.new(color.gray, 75)
colorMarketBottom = wvf >= bandaSuperior or wvf >= rangoAlto ? color.lime : color.new(color.gray, 75)


// Alerts agregadas para las barras
primeraMarcaTop = (colorMarketTop[0] == color.red)
segundaMarcaTop = (colorMarketTop[1] == color.red) 
terceraMarcaTop = (colorMarketTop[2] == color.red)
cuartaMarcaTop = (colorMarketTop[3] == color.red)

topAlert = primeraMarcaTop and segundaMarcaTop and terceraMarcaTop and cuartaMarcaTop


primeraMarcaBottom = (colorMarketBottom[0] == color.lime)
segundaMarcaBottom = (colorMarketBottom[1] == color.lime) 
terceraMarcaBottom = (colorMarketBottom[2] == color.lime)
cuartaMarcaBottom = (colorMarketBottom[3] == color.lime)

bottomAlert = primeraMarcaBottom and segundaMarcaBottom and terceraMarcaBottom and cuartaMarcaBottom


//Graficar barras
hline(50, 'Zero Line', color = color.new(#787B86, 50))

plot((-100 * wvf1) , title = 'Market Top', style = plot.style_columns, linewidth = 4, color = colorMarketTop)
plot((-100 * wvf) , title = 'Market Bottom', style = plot.style_columns, linewidth = 4, color = colorMarketBottom)


//--------------
//Stochastic

periodK = input.int(15, title="%K Length", minval=1)
smoothK = input.int(3, title="%K Smoothing", minval=1)
periodD = input.int(3, title="%D Smoothing", minval=1)
k = ta.sma(ta.stoch(close, high, low, periodK), smoothK)
d = ta.sma(k, periodD)
plot(k, title="%K", color=#2962FF)
plot(d, title="%D", color=#FF6D00)
h0 = hline(80, "Upper Band", color=#787B86)
hline(50, "Middle Band", color=color.new(#787B86, 50))
h1 = hline(20, "Lower Band", color=#787B86)
fill(h0, h1, color=color.rgb(33, 150, 243, 90), title="Background")


// Crear una alerta combinada usando "or" junto a la estocástica
estocasticaEnTop =k > 85 and d > 85
estocasticaEnBottom = k < 15 and d < 15 
alertaCombinadaTop = (topAlert and estocasticaEnTop )
alertaCombinadaBottom =  (bottomAlert and estocasticaEnBottom)

alertcondition(alertaCombinadaTop, 'Atento BTC! ', 'Top alcanzado! Vender!')
alertcondition(alertaCombinadaBottom, 'Atento BTC! ', 'Bottom alcanzado! Comprar')